package at.jku.sea.cloud.rest.server.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;

import at.jku.sea.cloud.exceptions.OwnerDoesNotExistException;
import at.jku.sea.cloud.rest.pojo.PojoArtifact;
import at.jku.sea.cloud.rest.pojo.PojoOwner;
import at.jku.sea.cloud.rest.server.handler.OwnerHandler;

/**
 * @author Dominik Muttenthaler
 * @author Florian Weger
 */
@Controller
@RequestMapping("/designspace/owners")
public class OwnerController {

	@Autowired OwnerHandler handler;

	@RequestMapping(value = "/id={id}/artifacts", method = RequestMethod.GET)
	public ResponseEntity<PojoArtifact[]> getArtifacts(
			@PathVariable long id)
			throws OwnerDoesNotExistException {
		PojoArtifact[] result = handler.getArtifacts(id);
		return new ResponseEntity<PojoArtifact[]>(result, HttpStatus.OK);
	}

	@RequestMapping(value = "/id={id}", method = RequestMethod.GET)
	public ResponseEntity<PojoOwner> getOwner(
			@PathVariable long id)
			throws OwnerDoesNotExistException {
		PojoOwner result = handler.getOwner(id);
		return new ResponseEntity<PojoOwner>(result, HttpStatus.OK);
	}

	// ------------------------------------
	// Exception handling
	// ------------------------------------

	@ExceptionHandler(OwnerDoesNotExistException.class)
	@ResponseStatus(value = HttpStatus.NOT_FOUND)
	@ResponseBody
	public String handleOwnerDoesNotExistException() {
		return OwnerDoesNotExistException.class.getSimpleName();
	}
}
